import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext

logger = logging.getLogger(__name__)

def create_main_menu_keyboard() -> InlineKeyboardMarkup:
    """Create the main menu keyboard."""
    keyboard = [
        [InlineKeyboardButton("üìã –ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω / –ü–æ—Å—Ç—ã", callback_data='content_plan')],
        [InlineKeyboardButton("üéØ –ü–µ—Ä–µ—É–ø–∞–∫–æ–≤–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∞", callback_data='repackage')],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data='start_over')]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_monetization_keyboard() -> InlineKeyboardMarkup:
    """Create keyboard for monetization options."""
    keyboard = [
        [InlineKeyboardButton("üì¢ –†–µ–∫–ª–∞–º–∞", callback_data='advertising')],
        [InlineKeyboardButton("üõçÔ∏è –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤", callback_data='products')],
        [InlineKeyboardButton("üîß –ü—Ä–æ–¥–∞–∂–∞ —É—Å–ª—É–≥", callback_data='services')],
        [InlineKeyboardButton("üéì –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, –∫—É—Ä—Å—ã", callback_data='consulting')],
        [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_style_keyboard() -> InlineKeyboardMarkup:
    """Create keyboard for writing style options."""
    keyboard = [
        [InlineKeyboardButton("‚ö° –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π", callback_data='aggressive')],
        [InlineKeyboardButton("üìä –î–µ–ª–æ–≤–æ–π", callback_data='business')],
        [InlineKeyboardButton("ü§£ –Æ–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π", callback_data='humorous')],
        [InlineKeyboardButton("‚úç –°–≤–æ–π —Å—Ç–∏–ª—å", callback_data='custom')],
        [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_subscription_keyboard() -> InlineKeyboardMarkup:
    """Create keyboard with subscription button."""
    return InlineKeyboardMarkup([[
        InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/expert_buyanov"),
        InlineKeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data='check_subscription')
    ]])

def create_back_to_menu_keyboard() -> InlineKeyboardMarkup:
    """Create keyboard with back to menu button."""
    return InlineKeyboardMarkup([[
        InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='back_to_menu')
    ]])

def check_subscription(context: CallbackContext, user_id: int) -> bool:
    """Check if user is subscribed to the required channel."""
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        member = context.bot.get_chat_member(chat_id="@expert_buyanov", user_id=user_id)

        # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        logger.info("=============== SUBSCRIPTION CHECK ===============")
        logger.info(f"User ID: {user_id}")
        logger.info(f"Member status: {member.status}")
        logger.info("===============================================")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        is_member = member.status in ['member', 'administrator', 'creator']

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
        return is_member

    except Exception as e:
        logger.error(f"Subscription check error for user {user_id}: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        return False